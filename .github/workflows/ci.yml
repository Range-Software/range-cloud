name: CI (Linux/macOS/Windows)

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            qt_host: linux
            qt_arch: linux_gcc_64
            shell: bash
            pkg_glob: build-Release/*.{deb,rpm,sh,run,zip,tar.gz,tar.xz}
          - os: macos-14
            arch: arm64
            qt_host: mac
            qt_arch: clang_64
            shell: bash
            pkg_glob: build-Release/*.{dmg,pkg,zip,tar.gz,tar.xz}
          - os: windows-latest
            arch: x64
            qt_host: windows
            qt_arch: win64_msvc2022_64
            shell: pwsh
            pkg_glob: build-Release/*.{msi,exe,zip}

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # --- OS prep -----------------------------------------------------------
      - name: Prep Linux packages
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build

      - name: Prep macOS packages
        if: startsWith(matrix.os, 'macos-')
        shell: bash
        run: |
          brew update
          brew install ninja || true

      - name: Set up MSVC (Windows)
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Ensure Ninja (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          choco install ninja -y || echo "Ninja already present"

      # --- Qt install --------------------------------------------------------
      - name: Install Qt 6.10.0
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.10.0'
          host: ${{ matrix.qt_host }}
          target: 'desktop'
          arch: ${{ matrix.qt_arch }}
          cache: true
          aqtversion: '==3.3.*'          # keep aqt in 3.3.x line
          modules: 'qthttpserver qtwebsockets'

      - name: Show versions
        shell: ${{ matrix.shell }}
        run: |
          cmake --version
          qmake -v || echo "qmake not on PATH (ok for CMake-only builds)"

      # --- Configure, Build -------------------------------------------------
      - name: Configure (Release)
        shell: ${{ matrix.shell }}
        run: |
          cmake -S src -B build-Release -G Ninja

      - name: Build
        shell: ${{ matrix.shell }}
        run: |
          cmake --build build-Release --target package --parallel

      # --- Upload artifacts --------------------------------------------------
      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: range-cloud-${{ matrix.os }}-${{ matrix.arch }}-packages
          path: ${{ matrix.pkg_glob }}
          if-no-files-found: warn
